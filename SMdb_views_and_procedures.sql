CREATE PROCEDURE PA_vendorscores (IN vendor VARCHAR(45))
BEGIN
    SELECT * FROM V_SCORES WHERE
    V_SCORES.VENDORNAME = vendor;
END

CREATE or REPLACE VIEW va_allweightedcatscores
AS
SELECT PERSONA, VENDORID, SUITECATID, CATEGORYNAME, AVG(SMSCORES.SMSCORE * weights.Weight)
AS WEIGHTEDSCORE FROM SMSCORES, WEIGHTS, V_LEVELNAMEID
WHERE SMSCORES.SCSEID = V_LEVELNAMEID.SCSEID AND WEIGHTS.SCSEID = SMSCORES.SCSEID
GROUP BY PERSONA, VENDORID, SUITECATID;

CREATE VIEW va_allweightedelemscores
AS
SELECT PERSONA, VENDORID, SMSCORES.SCSEID, SMSCORES.SMSCORE * weights.Weight AS WEIGHTEDSCORE FROM SMSCORES, WEIGHTS
WHERE SMSCORES.SCSEID = WEIGHTS.SCSEID GROUP BY PERSONA, VENDORID, SMSCORES.SCSEID;

CREATE or REPLACE VIEW va_allweightedsubcatscores
AS
SELECT PERSONA, VENDORID, SUITECATSUBID, SUBCATEGORYNAME, AVG(SMSCORES.SMSCORE * weights.Weight)
AS WEIGHTEDSCORE FROM SMSCORES, WEIGHTS, V_LEVELNAMEID
WHERE SMSCORES.SCSEID = V_LEVELNAMEID.SCSEID AND WEIGHTS.SCSEID = SMSCORES.SCSEID
GROUP BY PERSONA, VENDORID, SUITECATSUBID;

CREATE OR REPLACE VIEW va_LASTWEIGHTS
AS
SELECT PERSONAS.PERSONAID, PERSONAS.PERSONANAME, SCSEID, weight
FROM PERSONAS, WEIGHTS
WHERE WEIGHTS.LASTVERSION = 1 AND
PERSONAS.PERSONAID = WEIGHTS.PERSONA;

CREATE VIEW va_levelnameid
AS
SELECT SUITES.SUITEID, SUITES.SUITEACRONYM, SUITECATEGORY.SUITECATID,
CATEGORYNAME, SUITECATSUB.SUITECATSUBID, SUBCATEGORYNAME, SCSEID, ELEMENTNAME
FROM SUITECATSUBELEM
    INNER JOIN ELEMENTS
        ON ELEMENTS.ELEMENTID = SUITECATSUBELEM.ELEMENTID
    INNER JOIN SUBCATEGORIES
        ON SUBCATEGORIES.SUBCATEGORYID = SUITECATSUBELEM.SUBCATEGORYID
	INNER JOIN SUITECATSUB
		ON SUITECATSUB.SUBCATEGORYID = SUITECATSUBELEM.SUBCATEGORYID
        AND SUITECATSUB.CATEGORYID = SUITECATSUBELEM.CATEGORYID
        AND SUITECATSUB.SUITEID = SUITECATSUBELEM.SUITEID
    INNER JOIN CATEGORIES
        ON CATEGORIES.CATEGORYID = SUITECATSUBELEM.CATEGORYID        
	INNER JOIN SUITECATEGORY
		ON SUITECATEGORY.CATEGORYID = SUITECATSUBELEM.CATEGORYID
        AND SUITECATEGORY.SUITEID = SUITECATSUBELEM.SUITEID
	INNER JOIN SUITES
        ON SUITES.SUITEID = SUITECATSUBELEM.SUITEID
	ORDER BY SUITEID, SUITECATID, SUITECATSUBID, SCSEID;




CREATE OR REPLACE VIEW va_scores
AS
select suites.suiteid, suiteacronym, suitecategory.suitecatid, categoryname,
subcategories.subcategoryid, subcategoryname, elements.elementid, elementname,
smscore, vendorname, quarter, year
from suites, categories, subcategories, elements, suitecategory, suitecatsub,
smscores, suitecatsubelem, vendors, rfi, rfielements
where smscores.scseid = suitecatsubelem.scseid and
categories.categoryid	= suitecatsubelem.categoryid and
suites.suiteid  =  suitecatsubelem.suiteid and
subcategories.subcategoryid  =  suitecatsubelem.subcategoryid and
elements.elementid  =  suitecatsubelem.elementid and
vendors.VendorID = smscores.vendorid and
smscores.rfielementid = rfielements.rfielement_id and
suitecategory.suiteid = suitecatsubelem.suiteid and
suitecategory.categoryid = suitecatsubelem.categoryid and
suitecatsub.suiteid = suitecatsubelem.suiteid and
suitecatsub.categoryid = suitecatsubelem.categoryid and
suitecatsub.suiteid = suitecatsubelem.suiteid and
suitecatsub.subcategoryid = suitecatsubelem.subcategoryid and
rfi.rfi_id = rfielements.rfi_id;

CREATE OR REPLACE VIEW va_scores_last
AS
select suites.suiteid, suiteacronym, suitecategory.suitecatid, categoryname,
suitecatsub.suitecatsubid, subcategoryname, suitecatsubelem.scseid, elementname,
smscore, vendors.vendorid, vendorname, quarter, year
from suites, categories, subcategories, elements, suitecategory, suitecatsub,
smscores, suitecatsubelem, vendors, rfi, rfielements
where smscores.scseid = suitecatsubelem.scseid and
categories.categoryid	= suitecatsubelem.categoryid and
suites.suiteid  =  suitecatsubelem.suiteid and
subcategories.subcategoryid  =  suitecatsubelem.subcategoryid and
elements.elementid  =  suitecatsubelem.elementid and
vendors.VendorID = smscores.vendorid and
smscores.rfielementid = rfielements.rfielement_id and
suitecategory.suiteid = suitecatsubelem.suiteid and
suitecategory.categoryid = suitecatsubelem.categoryid and
suitecatsub.suiteid = suitecatsubelem.suiteid and
suitecatsub.categoryid = suitecatsubelem.categoryid and
suitecatsub.suiteid = suitecatsubelem.suiteid and
suitecatsub.subcategoryid = suitecatsubelem.subcategoryid and
rfi.rfi_id = rfielements.rfi_id and
smscores.lastversion = 1;

CREATE OR REPLACE VIEW va_SMAP
AS
SELECT SMSCORES.VENDORID, VENDORNAME, SMSCORES.SUITECATID, CATEGORYNAME, SMSCORE,
	SURVEY_SCORE, NUMBEROFREFS, QUARTER, YEAR
FROM
(SELECT VENDORID, VENDORNAME, SUITECATID, CATEGORYNAME, AVG(SMSCORE)
	AS SMSCORE, QUARTER, YEAR FROM v_scores_last
	GROUP BY VENDORID) AS SMSCORES
INNER JOIN
(SELECT VENDORID, SUITECATID, NUMBEROFREFS, AVGSCORE AS SURVEY_SCORE
	FROM v_survey_scores)
	AS SURVEY_SCORES
ON SMSCORES.VENDORID = SURVEY_SCORES.VENDORID AND
	SMSCORES.SUITECATID = SURVEY_SCORES.SUITECATID;

CREATE OR REPLACE VIEW va_SMAP_SMSCORES
AS
SELECT PERSONA, PERSONANAME, VENDORID, VENDORNAME, SUITECATID,
CATEGORYNAME, ROUND(AVG(SUBCATWEIGHTED),2) AS FINALSMSCORES
FROM V_WEIGHTED_SCOREPERSONA_SUBCAT
GROUP BY SUITECATID, VENDORID, PERSONA;

CREATE OR REPLACE VIEW va_SMAP_SURVEY
AS
SELECT PERSONAID, VENDORID, AVG(WEIGHTED_QVP) AS CUSTOMERSCORE FROM
(SELECT PERSONAID, VENDORID, SURVEYWEIGHTS.QUESTIONID, ROUND(QUESTIONSCORE*WEIGHT,2) AS WEIGHTED_QVP
FROM V_SURVEY_QUESTIONVENDORSCORE
INNER JOIN SURVEYWEIGHTS
ON SURVEYWEIGHTS.QUESTIONID = V_SURVEY_QUESTIONVENDORSCORE.QUESTIONID
GROUP BY PERSONAID, VENDORID, SURVEYWEIGHTS.QUESTIONID) AS PVQW
GROUP BY PERSONAID, VENDORID;

#QUESTION ID, QUESTION SCORE, VENDOR ID
CREATE OR REPLACE VIEW va_SURVEY_QUESTIONVENDORSCORE
AS
SELECT QUESTIONID, AVG(SCORE) AS QUESTIONSCORE, VENDORID FROM
(SELECT REFID, QUESTIONID, SCORE, VENDORID FROM SURVEYSCORES
INNER JOIN SURVEYREFERENCES
ON SURVEYREFERENCES.REFERENCEID = REFID) AS RFVSCORE
GROUP BY QUESTIONID, VENDORID;

CREATE OR REPLACE VIEW va_SURVEY_SCORES
AS
SELECT VENDORID, VENDORNAME, SUITECATID, CATEGORYNAME, COUNT(REFAVGS.VENDORID) AS NUMBEROFREFS,
AVG(REFAVGS.AVGSCORE) AS AVGSCORE FROM
(SELECT REFERENCEID, v_levelnameid.SuiteCatID, CATEGORYNAME, VENDORS.VENDORID, VENDORNAME, AVG(SCORE) AS AVGSCORE
	FROM surveyscores, surveyreferences, surveyrefsuitecat, v_levelnameid, VENDORS
	WHERE SURVEYSCORES.REFID = SURVEYREFERENCES.REFERENCEID AND
    surveyrefsuitecat.RefID = REFERENCEID AND
	v_levelnameid.SUITECATID = surveyrefsuitecat.SUITECATID AND
    VENDORS.VENDORID = SURVEYREFERENCES.VENDORID
	GROUP BY REFERENCEID) AS REFAVGS
    GROUP BY VENDORID;

CREATE OR REPLACE VIEW va_SURVEY_WEIGHTEDPERSONASCORES
AS
SELECT REFID, PERSONAID, AVG(WEIGHTEDSCORE) AS WSCORE
FROM
(SELECT REFID, PERSONAID, ROUND(SCORE*WEIGHT,2) AS WEIGHTEDSCORE
FROM SURVEYSCORES
INNER JOIN SURVEYWEIGHTS
ON SURVEYWEIGHTS.QUESTIONID = SURVEYSCORES.QUESTIONID
GROUP BY PERSONAID, REFID, SURVEYWEIGHTS.QUESTIONID) AS WEIGHTEDSCORES
GROUP BY PERSONAID, REFID;


CREATE OR REPLACE VIEW va_WEIGHTED_SCOREPERSONA_ELEMENT
AS
SELECT PERSONA, PERSONANAME, VENDORID, VENDORNAME, SUITECATID,
CATEGORYNAME, SUITECATSUBID, SUBCATEGORYNAME, WEIGHTS.SCSEID,
SMSCORE*WEIGHT AS WEIGHTEDSCORE
	FROM V_SCORES_LAST
	INNER JOIN WEIGHTS
	ON V_SCORES_LAST.SCSEID = WEIGHTS.SCSEID
    INNER JOIN PERSONAS
    ON PERSONAS.PERSONAID = WEIGHTS.PERSONA;

CREATE OR REPLACE VIEW va_WEIGHTED_SCOREPERSONA_SUBCAT
AS
SELECT PERSONA, PERSONANAME, VENDORID, VENDORNAME, SUITECATID,
CATEGORYNAME, SUITECATSUBID, SUBCATEGORYNAME, AVG(WEIGHTEDSCORE) AS SUBCATWEIGHTED
FROM V_WEIGHTED_SCOREPERSONA_ELEMENT
GROUP BY SUITECATSUBID, VENDORID, PERSONA;

