class category_names(db.Model):
	category_nameid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = True)
	suitemodcat = db.relationship('suitemodcat', backref = 'category_names')
	category_name = db.Column(db.String(45), nullable = False, autoincrement = False)

	def __repr__ (self):
		return self.category_name

class current_quarteryear(db.Model):
	id = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	quarter = db.Column(db.Integer, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, nullable = False, autoincrement = False)

class element_names(db.Model):
	element_nameid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = True)
	suitemodcatelem = db.relationship('suitemodcatelem', backref = 'element_names')
	elementname = db.Column(db.String(100), nullable = False, autoincrement = False)

	def __repr__ (self):
		return self.elementname

class elementvariants(db.Model):
	variantid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = True)
	suitemodcatelem = db.relationship('suitemodcatelem', backref = 'elementvariants')
	specification = db.Column(db.String(5000), autoincrement = False)
	example_scoring = db.Column(db.String(2000), autoincrement = False)
	quarter = db.Column(db.Integer, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, nullable = False, autoincrement = False)
	update_date = db.Column(db.DateTime, primary_key = True, nullable = False, autoincrement = False, default = datetime.datetime.now, onupdate = datetime.datetime.now)

class parentvendors(db.Model):
	parent_vendorid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = True)
	vendors = db.relationship('vendors', backref = 'parentvendors')
	parent_name = db.Column(db.String(45), nullable = False, autoincrement = False)
	quarter = db.Column(db.Integer, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, nullable = False, autoincrement = False)
	update_date = db.Column(db.DateTime, primary_key = True, nullable = False, autoincrement = False, default = datetime.datetime.now, onupdate = datetime.datetime.now)

class personas(db.Model):
	personaid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	personaname = db.Column(db.String(45), nullable = False, autoincrement = False)
	persona_description = db.Column(db.String(1000), autoincrement = False)
	quarter = db.Column(db.Integer, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, nullable = False, autoincrement = False)
	update_date = db.Column(db.DateTime, primary_key = True, nullable = False, autoincrement = False, default = datetime.datetime.now)

class refs_suitemods(db.Model):
	reference_id = db.Column(db.Integer, db.ForeignKey('survey_references.referenceid'), primary_key = True, nullable = False, autoincrement = False)
	suitemod_id = db.Column(db.Integer, db.ForeignKey('suitemodules.suitemodid'), primary_key = True, nullable = False, autoincrement = False)

class rfi(db.Model):
	rfi_id = db.Column(db.Integer, nullable = False, autoincrement = True)
	suitemod_id = db.Column(db.Integer, db.ForeignKey('suitemodules.suitemodid'), primary_key = True, nullable = False, autoincrement = False)
	quarter = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	invite_date = db.Column(db.DateTime, nullable = False, autoincrement = False, default = datetime.datetime.now)

class rfielements_analysts(db.Model):
	vendor_id = db.Column(db.Integer, db.ForeignKey('vendors.vendorid'), primary_key = True, nullable = False, autoincrement = False)
	smce_id = db.Column(db.Integer, db.ForeignKey('suitemodcatelem.smceid'), primary_key = True, nullable = False, autoincrement = False)
	quarter = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	round = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	update_date = db.Column(db.DateTime, primary_key = True, nullable = False, autoincrement = False, default = datetime.datetime.now)
	sm_score = db.Column(db.Numeric(2,1), autoincrement = False)
	analyst_notes = db.Column(db.String(1000), autoincrement = False)
	user_id = db.Column(db.Integer, db.ForeignKey('users.userid'), nullable = False, autoincrement = False)

class rfielements_providers(db.Model):
	vendor_id = db.Column(db.Integer, db.ForeignKey('vendors.vendorid'), primary_key = True, nullable = False, autoincrement = False)
	smce_id = db.Column(db.Integer, db.ForeignKey('suitemodcatelem.smceid'), primary_key = True, nullable = False, autoincrement = False)
	quarter = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	round = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	update_date = db.Column(db.DateTime, primary_key = True, nullable = False, autoincrement = False, default = datetime.datetime.now)
	self_score = db.Column(db.Integer, autoincrement = False)
	self_description = db.Column(db.String(5000), autoincrement = False)
	attachment_id = db.Column(db.Integer, autoincrement = False)
	user_id = db.Column(db.Integer, db.ForeignKey('users.userid'), nullable = False, autoincrement = False)

class suitemodcat(db.Model):
	suitemod_id = db.Column(db.Integer, db.ForeignKey('suitemodules.suitemodid'), nullable = False, autoincrement = False)
	suitemodcatid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = True)
	suitemodcatelem = db.relationship('suitemodcatelem', backref = 'suitemodcat')
	update_date = db.Column(db.DateTime, primary_key = True, nullable = False, autoincrement = False, default = datetime.datetime.now, onupdate = datetime.datetime.now)
	category_name_id = db.Column(db.Integer, db.ForeignKey('category_names.category_nameid'), nullable = False, autoincrement = False)
	quarter = db.Column(db.Integer, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, nullable = False, autoincrement = False)

class suitemodcatelem(db.Model):
	suitemodcat_id = db.Column(db.Integer, db.ForeignKey('suitemodcat.suitemodcatid'), nullable = False, autoincrement = False)
	smceid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = True)
	rfielements_analysts = db.relationship('rfielements_analysts', backref = 'suitemodcatelem')
	rfielements_providers = db.relationship('rfielements_providers', backref = 'suitemodcatelem')
	update_date = db.Column(db.DateTime, primary_key = True, nullable = False, autoincrement = False, default = datetime.datetime.now, onupdate = datetime.datetime.now)
	element_name_id = db.Column(db.Integer, db.ForeignKey('element_names.element_nameid'), nullable = False, autoincrement = False)
	quarter = db.Column(db.Integer, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, nullable = False, autoincrement = False)
	variant_id = db.Column(db.Integer, db.ForeignKey('elementvariants.variantid'), nullable = False, autoincrement = False)
	classid = db.Column(db.Integer, autoincrement = False)

class suitemodules(db.Model):
	suite_id = db.Column(db.Integer, db.ForeignKey('suites.suiteid'), nullable = False, autoincrement = False)
	suitemodid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = True)
	refs_suitemods = db.relationship('refs_suitemods', backref = 'suitemodules')
	rfi = db.relationship('rfi', backref = 'suitemodules')
	suitemodcat = db.relationship('suitemodcat', backref = 'suitemodules')
	vendors_rfi = db.relationship('vendors_rfi', backref = 'suitemodules')
	update_date = db.Column(db.DateTime, primary_key = True, nullable = False, autoincrement = False, default = datetime.datetime.now, onupdate = datetime.datetime.now)
	suitemod_name = db.Column(db.String(45), nullable = False, autoincrement = False)
	quarter = db.Column(db.Integer, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, nullable = False, autoincrement = False)

	def __repr__ (self):
		return self.suitemod_name

class suites(db.Model):
	suiteid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = True)
	suitemodules = db.relationship('suitemodules', backref = 'suites')
	suite_name = db.Column(db.String(50), nullable = False, autoincrement = False)
	quarter = db.Column(db.Integer, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, nullable = False, autoincrement = False)
	update_date = db.Column(db.DateTime, primary_key = True, nullable = False, autoincrement = False, default = datetime.datetime.now, onupdate = datetime.datetime.now)

	def __repr__ (self):
		return self.suite_name

class survey_answers(db.Model):
	reference_id = db.Column(db.Integer, db.ForeignKey('survey_references.referenceid'), primary_key = True, nullable = False, autoincrement = False)
	question_id = db.Column(db.Integer, db.ForeignKey('survey_questions.questionid'), primary_key = True, nullable = False, autoincrement = False)
	Answer = db.Column(db.String(1000), autoincrement = False)

class survey_questions(db.Model):
	questionid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	survey_answers = db.relationship('survey_answers', backref = 'survey_questions')
	statement = db.Column(db.String(500), nullable = False, autoincrement = False)

	def __repr__ (self):
		return self.statement

class survey_references(db.Model):
	referenceid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = True)
	refs_suitemods = db.relationship('refs_suitemods', backref = 'survey_references')
	survey_answers = db.relationship('survey_answers', backref = 'survey_references')
	datetime = db.Column(db.DateTime, nullable = False, autoincrement = False)
	name = db.Column(db.String(45), nullable = False, autoincrement = False)
	email = db.Column(db.String(100), nullable = False, autoincrement = False)
	company = db.Column(db.String(45), autoincrement = False)
	hq_country = db.Column(db.String(45), autoincrement = False)
	office_country = db.Column(db.String(45), autoincrement = False)
	vendor_id = db.Column(db.Integer, db.ForeignKey('vendors.vendorid'), nullable = False, autoincrement = False)
	quarter = db.Column(db.Integer, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, nullable = False, autoincrement = False)
	status = db.Column(db.Integer, nullable = False, autoincrement = False)
	type = db.Column(db.Integer, nullable = False, autoincrement = False)
	internal_comments = db.Column(db.String(100), autoincrement = False)
	original_vendor_id = db.Column(db.Integer, autoincrement = False)

	def __repr__ (self):
		return self.email

class users(db.Model):
	userid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	rfielements_analysts = db.relationship('rfielements_analysts', backref = 'users')
	rfielements_providers = db.relationship('rfielements_providers', backref = 'users')
	email = db.Column(db.String(80), nullable = False, autoincrement = False)
	user_type = db.Column(db.String(7), nullable = False, autoincrement = False)
	assigned_vendor_id = db.Column(db.Integer, db.ForeignKey('vendors.vendorid'), autoincrement = False)
	password = db.Column(db.String(45), nullable = False, autoincrement = False)
	update_date = db.Column(db.DateTime, primary_key = True, nullable = False, autoincrement = False, onupdate = datetime.datetime.now)
	active = db.Column(db.Integer, nullable = False, autoincrement = False)
	registration_date = db.Column(db.DateTime, nullable = False, autoincrement = False)
	anonymized = db.Column(db.Integer, nullable = False, autoincrement = False)
	private = db.Column(db.Integer, nullable = False, autoincrement = False)

	def __repr__ (self):
		return self.email

class vendors(db.Model):
	vendorid = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = True)
	rfielements_analysts = db.relationship('rfielements_analysts', backref = 'vendors')
	rfielements_providers = db.relationship('rfielements_providers', backref = 'vendors')
	survey_references = db.relationship('survey_references', backref = 'vendors')
	users = db.relationship('users', backref = 'vendors')
	vendors_rfi = db.relationship('vendors_rfi', backref = 'vendors')
	vendor_name = db.Column(db.String(45), nullable = False, autoincrement = False)
	quarter = db.Column(db.Integer, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, nullable = False, autoincrement = False)
	update_date = db.Column(db.DateTime, primary_key = True, nullable = False, autoincrement = False, default = datetime.datetime.now, onupdate = datetime.datetime.now)
	active = db.Column(db.Integer, nullable = False, autoincrement = False)
	parent_vendorid = db.Column(db.Integer, db.ForeignKey('parentvendors.parent_vendorid'), autoincrement = False)
	vendor_weight = db.Column(db.Numeric(3,2), autoincrement = False)

	def __repr__ (self):
		return self.vendor_name

class vendors_rfi(db.Model):
	vendor_id = db.Column(db.Integer, db.ForeignKey('vendors.vendorid'), primary_key = True, nullable = False, autoincrement = False)
	suitemod_id = db.Column(db.Integer, db.ForeignKey('suitemodules.suitemodid'), primary_key = True, nullable = False, autoincrement = False)
	quarter = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	year = db.Column(db.Integer, primary_key = True, nullable = False, autoincrement = False)
	update_date = db.Column(db.DateTime, nullable = False, autoincrement = False, default = datetime.datetime.now, onupdate = datetime.datetime.now)
	status = db.Column(db.String(1), nullable = False, autoincrement = False)
	current_round = db.Column(db.Integer, nullable = False, autoincrement = False)

